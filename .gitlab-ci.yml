stages:
  - build

before_script:
    - docker login -u "$REPO_USERNAME" -p "$REPO_PASSWORD" $REPO_HOSTNAME
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        IMAGE_TAG="${REPO_HOSTNAME}/${CI_PROJECT_NAME}:latest"
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = ${IMAGE_TAG}"
      else
        IMAGE_TAG="${REPO_HOSTNAME}/${CI_PROJECT_NAME}:$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = ${IMAGE_TAG}"
      fi

docker-build:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  script:
    - docker build --pull -t "${IMAGE_TAG}" .
    - docker run -v /tmp:/tmp -v $CI_PROJECT_DIR:/sonatype/reports -v /var/run/docker.sock:/var/run/docker.sock -e NEXUS_CONTAINER_SCANNING_SCANNER_IMAGE -e NEXUS_CONTAINER_SCANNING_REGISTRY_URL -e NEXUS_CONTAINER_SCANNING_REGISTRY_USER -e NEXUS_CONTAINER_SCANNING_REGISTRY_PASSWORD -e NEXUS_IQ_URL -e NEXUS_IQ_USERNAME -e NEXUS_IQ_PASSWORD sonatype/gitlab-nexus-iq-pipeline:latest /sonatype/evaluate -i $CI_PROJECT_NAME container:$IMAGE_TAG
    - docker push "$CI_REGISTRY_IMAGE${tag}"
  artifacts:
    name: "policy-eval-$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - "$CI_PROJECT_DIR/${CI_PROJECT_NAME}-policy-eval-report.html"
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile    